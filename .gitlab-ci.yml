default:
  interruptible: true
  image: registry.gitlab.com/kage-yami/dockerfile/rust:1.49.0-main
  retry:
    max: 2
    when:
      - runner_system_failure

stages:
  - test
  - check
  - build
  - publish

cache:
  key: $CI_COMMIT_REF_SLUG.$CI_JOB_NAME
  paths:
    - target

#################################################### JOB TEMPLATES #####################################################

.test: &test
  stage: test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success

.check: &check
  stage: check
  rules: &publish-rules
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never

.build: &build
  stage: build

.publish: &publish
  stage: publish
  rules: *publish-rules

###################################################### TEST JOBS #######################################################
## These don't run for tagged pipelines (as tests should've already been run when the commit was made).
########################################################################################################################

test:
  <<: *test
  script:
    - cargo test

lint:
  <<: *test
  script:
    - cargo clippy &> >(tee lint.txt)
    - test $(grep --count '^warning' lint.txt) -eq 0

coverage:
  <<: *test
  script:
    - cargo tarpaulin --verbose

format:
  <<: *test
  script:
    - cargo fmt -- --check

package:
  <<: *test
  script:
    - cargo package

###################################################### BUILD JOBS ######################################################
## These run for all pipelines (as they're relevant to both untagged and tagged runs).
########################################################################################################################

linux-aarch64:
  <<: *build
  script:
    - cargo build --target aarch64-unknown-linux-musl

linux-x86_64:
  <<: *build
  script:
    - cargo build --target x86_64-unknown-linux-musl

##################################################### PUBLISH JOBS #####################################################
## These don't run for untagged pipelines (as there's no point; no additional testing is done).
########################################################################################################################

version:
  <<: *check
  script:
    - cargo test --test version html_root_url -- --exact
    - version=$(grep -Eo '^version = "[^"]*"$' Cargo.toml  | sed -E 's|.+ = "([^"]+)"$|\1|')
    - test $version = $CI_COMMIT_TAG

publish:
  <<: *publish
  script:
    - cargo login $CRATES_IO_TOKEN
    - cargo publish

release:
  <<: *publish
  image: registry.gitlab.com/gitlab-org/release-cli:v0.5.0
  script:
    - echo "Creating release..."
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release $CI_COMMIT_TAG"
